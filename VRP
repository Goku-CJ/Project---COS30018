//VRP PROJECT PHASE 1 - CONNECTING OUT API WITH THE CODE.
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

public class DistanceMatrix {

    private static final String API_KEY = "OUR API KEY";
    private static final List<String> ADDRESSES = List.of(
            "3610+Hacks+Cross+Rd+Memphis+TN", // depot
            "1921+Elvis+Presley+Blvd+Memphis+TN",
            "149+Union+Avenue+Memphis+TN",
            "1034+Audubon+Drive+Memphis+TN",
            "1532+Madison+Ave+Memphis+TN",
            "706+Union+Ave+Memphis+TN",
            "3641+Central+Ave+Memphis+TN",
            "926+E+McLemore+Ave+Memphis+TN",
            "4339+Park+Ave+Memphis+TN",
            "600+Goodwyn+St+Memphis+TN",
            "2000+North+Pkwy+Memphis+TN",
            "262+Danny+Thomas+Pl+Memphis+TN",
            "125+N+Front+St+Memphis+TN",
            "5959+Park+Ave+Memphis+TN",
            "814+Scott+St+Memphis+TN",
            "1005+Tillman+St+Memphis+TN"
    );

    private static final int MAX_ELEMENTS = 100;

    public static void main(String[] args) throws Exception {
        List<List<Integer>> distanceMatrix = createDistanceMatrix();
        System.out.println(distanceMatrix);
    }

    private static List<List<Integer>> createDistanceMatrix() throws Exception {
        List<List<Integer>> distanceMatrix = new ArrayList<>();
        int numAddresses = ADDRESSES.size();
        int maxRows = MAX_ELEMENTS / numAddresses;
        int q = numAddresses / maxRows;
        int r = numAddresses % maxRows;

        for (int i = 0; i < q; i++) {
            List<String> originAddresses = ADDRESSES.subList(i * maxRows, (i + 1) * maxRows);
            JSONObject response = sendRequest(originAddresses, ADDRESSES);
            distanceMatrix.addAll(buildDistanceMatrix(response));
        }

        if (r > 0) {
            List<String> originAddresses = ADDRESSES.subList(q * maxRows, q * maxRows + r);
            JSONObject response = sendRequest(originAddresses, ADDRESSES);
            distanceMatrix.addAll(buildDistanceMatrix(response));
        }

        return distanceMatrix;
    }

    private static JSONObject sendRequest(List<String> originAddresses, List<String> destAddresses) throws Exception {
        String originAddressStr = String.join("|", originAddresses);
        String destAddressStr = String.join("|", destAddresses);
        String requestUrl = String.format(
                "https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=%s&destinations=%s&key=%s",
                originAddressStr, destAddressStr, API_KEY
        );

        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet request = new HttpGet(requestUrl);
            try (CloseableHttp
